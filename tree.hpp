#ifndef TREE_HPP
#define TREE_HPP

enum { BLACK, RED };

template <typename T> class Tree {
  Tree(){};
  ~Tree(){};

public:
private:
  struct Node {
    Node *left;
    Node *right;
    T data;
  }

  Node node;
};

#endif // TREE_HPP

// В красно-черных деревьях цвет узлов определяется следующим образом:
// Узел является красным, если выполняются оба следующих условия:

// Узел не является корневым узлом дерева.
// У узла есть родительский узел, и родительский узел имеет черный цвет.

// Узел является черным, если выполняется хотя бы одно из следующих условий:

// Узел является корневым узлом дерева (в соответствии со свойством корня).
// Родительский узел данного узла имеет красный цвет (в соответствии со
// свойством красных узлов). Узел был перекрашен в черный цвет для
// восстановления свойств красно-черного дерева после операций вставки или
// удаления.

// Таким образом, новые узлы, вставляемые в дерево, изначально окрашиваются в
// красный цвет, если их родительский узел имеет черный цвет. Это гарантирует,
// что свойство красных узлов не нарушается. Однако после вставки или удаления
// может потребоваться перекраска и/или вращения для восстановления свойств
// красно-черного дерева. В этом процессе некоторые узлы могут быть перекрашены
// в черный цвет. Корневой узел дерева всегда должен быть черным, чтобы
// удовлетворить свойству корня.